group 'com.tz'
version '1.0-SNAPSHOT'

defaultTasks 'clean', //清空各种临时文件
            'war', //打 war 包
            'test', //单元测试
            'firefoxTest' //集成测试

//A Gradle plugin that provides Maven-like dependency management functionality
buildscript {
    repositories {
        mavenLocal()
        maven{ url 'http://maven.oschina.net/content/groups/public/'}
        jcenter()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"
        //and set VM options for debug usage : -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.2'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE"
    }
}

//项目插件
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'

//配置依赖下载仓库
repositories {
    mavenLocal()
    maven{ url 'http://maven.oschina.net/content/groups/public/'}
    mavenCentral()
}

//设置编码
compileJava.options.encoding = 'UTF-8'
compileGroovy.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
compileTestGroovy.options.encoding = 'UTF-8'

//编译级别
sourceCompatibility = 1.7
targetCompatibility = 1.7

//设置源码路径
sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/groovy', 'src/main/java']
        }
        java {srcDirs = []}
//        resources {
//            srcDirs = ['src/main/resources']
//        }
    }
    test {
        groovy {
            srcDirs = ['src/test/java', 'src/test/groovy']
        }
        java{srcDirs = []}
//        resources {
//            srcDirs = ['src/test/resources']
//        }
    }
}

//tomcat启动参数
tomcat {
    httpPort = 18888
    httpsPort = 18443
    ajpPort = 18009
    stopPort = 18081
}
tomcatRun.contextPath = '/autoCheck'
tomcatRun.reloadable = false

//配置忽略的依赖
configurations {
    all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
    all*.exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
}

//task -- 产生 pom.xml
task generatePom << {
    pom {
        project {
            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$projectDir/pom.xml")
}

//task -- 启动 Tomcat
task itTomcatRun(type: com.bmuschko.gradle.tomcat.tasks.TomcatRun) {
    daemon = true
}

//单元测试
test {
    include '**/Test*'
//    include '**/Sit*'
    testLogging {
        events "passed","failed","standardError"
    }
}

//用火狐浏览器集成测试
task sit (type: Test) {
//    dependsOn 'itTomcatRun'
    exclude '**/Test*'
    include '**/Sit*'

    testLogging {
        events "passed","failed","standardError"
    }

    outputs.upToDateWhen { false }  // Always run tests
    systemProperty "geb.build.reportsDir", reporting.file("$projectDir/build/firefoxTest/geb")
}

//项目依赖
dependencies {
    def springbootVersion = '1.2.5.RELEASE'
    compile "org.springframework.boot:spring-boot-starter:$springbootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springbootVersion"
    compile("org.springframework.boot:spring-boot-starter-web:$springbootVersion"){
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat' //by both name and group
    }
    compile "org.springframework.boot:spring-boot-starter-test:$springbootVersion"

    def struts2Version = '2.3.24'
    compile "org.apache.struts:struts2-convention-plugin:$struts2Version"
    compile "org.apache.struts:struts2-spring-plugin:$struts2Version"
    compile "org.apache.struts:struts2-json-plugin:$struts2Version"
    testCompile "org.apache.struts:struts2-junit-plugin:$struts2Version"

    compile "commons-dbcp:commons-dbcp:1.4"
    compile 'com.h2database:h2:1.3.176'
    compile 'org.apache.ant:ant:1.9.4'
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile 'org.slf4j:slf4j-log4j12:1.7.12'
    providedCompile "javax.servlet:javax.servlet-api:3.1.0"
    testCompile 'junit:junit:4.12'
    testCompile "javax.servlet.jsp:jsp-api:2.2"

    //集成测试
    testCompile "org.codehaus.groovy:groovy-all:2.4.4"
    testCompile "org.gebish:geb-spock:0.10.0"
    testCompile("org.spockframework:spock-core:1.0-groovy-2.4") {
        exclude group: "org.codehaus.groovy"
    }
    // If using JUnit, need to depend on geb-junit (3 or 4)
    testCompile "org.gebish:geb-junit4:0.10.0"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:2.47.1"

    //tomcat中间件
    def tomcatVersion = '7.0.55'
    testRuntime "org.apache.tomcat.embed:tomcat-embed-el:$tomcatVersion"
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:$tomcatVersion",
            "org.apache.tomcat.embed:tomcat-embed-jasper:$tomcatVersion"
}
